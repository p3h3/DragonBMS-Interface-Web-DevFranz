function updateLatestStoredConfigCalib(){var e=localStorage.getItem("lastSavedConfigCalibTime");lastLocalConfigText.innerHTML=null===e?"none yet":"Last local stored version: "+e}function getCalibStorage(){var e=localStorage.getItem("calibStorage");if(null===e||"undefined"===e)return console.log("[calib storage] no calibs stored yet."),{};let a;try{a=JSON.parse(e)}catch(e){return void console.log("[calib storage] error parsing json: "+e)}return a}function getCalibsForSerialNumber(e){var a=getCalibStorage();return void 0===a[e]?{}:a[e]}function getLatestCalibForSerialNumber(e){var a=getCalibsForSerialNumber(e);let l,t;for(const i in a)(void 0===l||l<a[i].unixTime)&&(l=a[i].unixTime,t=a[i]);return t}function getOldestCalibForSerialNumber(e){var a=getCalibsForSerialNumber(e);let l,t;for(const i in a)(void 0===l||l>a[i].unixTime)&&(l=a[i].unixTime,t=a[i]);return t}function deleteCalibObj(e){var a=getCalibStorage();delete a[e.serialNumber][e.timestamp],saveCalibStorage(a)}function deleteOldestCalibObjForSerialNumber(e){deleteCalibObj(getOldestCalibForSerialNumber(e))}function saveCalibStorage(a){if(null!=a){let e="";try{e=JSON.stringify(a)}catch(e){return void console.log("[calib storage] something went wrong during json.stringify: "+e)}localStorage.setItem("calibStorage",e)}}function addNewCalib(e,a){let l=getCalibStorage();var t=a.serialNumber;if(void 0===l||null===l)console.log("lol");else{var i=getDateStamp(),a={unixTime:getUnixTime(),timestamp:i,serialNumber:t,displayName:a.name,calib:e.getCalibObject()};for(void 0===l[t]&&(l[t]={}),void 0!==getLatestCalibForSerialNumber(t)&&objectsEqual(getLatestCalibForSerialNumber(t).calib,a.calib)&&(deleteCalibObj(getLatestCalibForSerialNumber(t)),l=getCalibStorage()),l[t][i]=a,saveCalibStorage(l);10<Object.keys(getCalibsForSerialNumber(t)).length;)deleteOldestCalibObjForSerialNumber(t)}}function fillInCalibBackupGUI(){var e=getCalibStorage();if(0===Object.keys(e).length)calibBackupDeviceSelect.disabled=!0,calibBackupSelect.disabled=!0;else{for(calibBackupDeviceSelect.disabled=!1,calibBackupSelect.disabled=!1;calibBackupDeviceSelect.firstChild;)calibBackupDeviceSelect.removeChild(calibBackupDeviceSelect.lastChild);for(;calibBackupSelect.firstChild;)calibBackupSelect.removeChild(calibBackupSelect.lastChild);var a=document.createElement("option");a.value="none",a.innerHTML="none",calibBackupDeviceSelect.appendChild(a);for(const i in e){var l=e[i][Object.keys(e[i])[0]],t=document.createElement("option");t.value=i,t.innerHTML=l.displayName,calibBackupDeviceSelect.appendChild(t)}}}getId("board-config-read-in-localStorage").addEventListener("click",()=>{var e=localStorage.getItem("lastSavedBMSConfig"),a=localStorage.getItem("lastSavedBMSCalib"),l=localStorage.getItem("lastSavedConfigCalibTime");null===e||null===a||null===l||"undefined"===e||"undefined"===a||"undefined"===l?lastLocalConfigText.innerHTML="none yet":(bmsConfigObj.readInJSON(e),bmsCalibObj.readInJSON(a),bmsConfigObj.setGUIValues(),bmsCalibObj.setGUIValues())}),updateLatestStoredConfigCalib(),getId("board-config-write-to-localStorage").addEventListener("click",()=>{if(bmsConfigObj.initialised&&bmsCalibObj.initialised){bmsConfigObj.readInGUIValues(),bmsCalibObj.readInGUIValues();var a=bmsConfigObj.getJSON(),l=bmsCalibObj.getJSON();let e="";void 0!==getIdValue("board-config-device-name")&&(e=getIdValue("board-config-device-name")),localStorage.setItem("lastSavedBMSConfig",a),localStorage.setItem("lastSavedBMSCalib",l),localStorage.setItem("lastSavedConfigCalibTime",e+" "+getDateStamp()),updateLatestStoredConfigCalib()}}),calibBackupDeviceSelect.addEventListener("change",()=>{let l=getCalibStorage();const t=calibBackupDeviceSelect.options[calibBackupDeviceSelect.selectedIndex].value;for(;calibBackupSelect.firstChild;)calibBackupSelect.removeChild(calibBackupSelect.lastChild);"none"!==t&&Object.keys(l[t]).reverse().forEach(e=>{var e=l[t][e],a=document.createElement("option");a.value=t+";"+e.timestamp,a.innerHTML=e.timestamp,calibBackupSelect.appendChild(a)})}),calibBackupReadButton.addEventListener("click",()=>{var e,a=calibBackupSelect.options[calibBackupSelect.selectedIndex].value;""!==a&&(e=a.split(";")[0],a=a.split(";")[1],e=getCalibStorage()[e][a].calib,bmsCalibObj.readInCalibObject(e),bmsCalibObj.setGUIValues())});