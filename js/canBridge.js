import gui_elements from"./gui_elements";import sf from"./helpers/small_functions";class canId{constructor(){}getBytes(){var e=[];return!1===this.extended?(e[0]=sf.to16bit(this.id)[1],e[1]=sf.to16bit(this.id)[0]):(e[0]=128|sf.to32bit(this.id)[3],e[1]=sf.to32bit(this.id)[2],e[2]=sf.to32bit(this.id)[1],e[3]=sf.to32bit(this.id)[0]),e}init(e,t){this.extended=e,this.id=t}initFromBytes(e){if(!(e.length<2)){if(e[0]>>8==1){if(e.length<4)return;this.extended=!0,e[0]=127&e[0]}this.extended?this.id=e[0]<<24|e[1]<<16|e[2]<<8|e[3]:this.id=e[0]<<8|e[1]}}}class canMessage{constructor(){}init(e,t,a){this.cId=new canId,this.cId.init(e,t),7<a.length||(this.data=a,this.dataLength=a.length)}initFromBytes(e){this.cId=new canId,this.cId.initFromBytes(e);let t;t=this.cId.extended?e.slice(4):e.slice(2),this.data=t}getBytes(){var t=this.cId.getBytes();for(let e=0;e<this.dataLength;e++)t.push(this.data[e]);return t}}export default class canBridge extends gui_elements{constructor(e,t,a){super(),sf.classListValueTextsRemove(this.canBridgeElements,"disabled"),this.txChar=e,this.rxConfigChar=t,this.rxStreamChar=a,void 0===this.txChar?console.log("[Tacho canBridge] canBridge not supported by firmware!"):(this.#addEventListeners(),void 0!==this.rxConfigChar&&void 0!==this.rxStreamChar||console.log("[Tacho canBridge] canBridge RX not supported, TX supported!"),this.addStreamListener())}sendMessage(e){e=e.getBytes();this.txChar.writeValueWithoutResponse(Uint8Array.from(e).buffer)}async addStreamListener(){this.rxStreamChar.addEventListener("characteristicvaluechanged",e=>{this.onRXReceive(e)}),await this.rxStreamChar.startNotifications()}onRXReceive(e){var t=e.target.value;if(!(t.byteLength<2)){var a=[];for(let e=0;e<t.byteLength;e++)a.push(t.getUint8(e));var e=new canMessage,e=(e.initFromBytes(a),console.log(e),this.canRxGaugeText.innerHTML+="<br>"+e.cId.id+"    "+e.data,this.canRxGaugeText.innerHTML.split("<br>").length);4<e&&(e=this.canRxGaugeText.innerHTML.split("<br>").splice(1),this.canRxGaugeText.innerHTML=e.join("<br>"))}}addToWhiteList(e,t){var a=new canId;return a.init(e,t),this.addCanIdToWhiteList(a)}addCanIdToWhiteList(i){var e=[0].concat(i.getBytes());return this.rxConfigChar.writeValue(Uint8Array.from(e).buffer).then(async e=>{var t=await this.getWhiteList();console.log("list after:"),console.log(t);let a=!1;for(const s of t)if(s.id===i.id){a=!0;break}if(a)return!0;console.log("[Tacho canBridge] successful write but not included in whitelist after")}).catch(e=>{console.log("[Tacho canBridge] "+e)}),!1}async getWhiteList(){let t=[];try{t=await this.rxConfigChar.readValue()}catch(e){return console.log(e),[]}if(!(t.byteLength<3)){var a=[];for(let e=0;e<t.byteLength;e++)a.push(t.getUint8(e));console.log("[Tacho canBridge] whiteList length: "+a[0]);var s=[];let e=a.slice(1);for(console.log(e);2<=e.length;){var i=new canId;i.initFromBytes(e),s.push(i),e=i.extended?e.slice(4):e.slice(2)}return s}}#addEventListeners(){this.canTxGaugeSend.addEventListener("click",()=>{var e=this.#getCanTxMessageFromGUI();this.sendMessage(e)}),this.canRxGaugeSend.addEventListener("click",()=>{this.#addCanRxMessageFromGUI()})}#getCanTxMessageFromGUI(){var e=this.canTxGaugeExtended.checked,t=parseInt(this.canTxGaugeId.value),a=[],s=(0<=parseInt(this.canTxGaugeD0.value)&&a.push(parseInt(this.canTxGaugeD0.value)),0<=parseInt(this.canTxGaugeD1.value)&&a.push(parseInt(this.canTxGaugeD1.value)),0<=parseInt(this.canTxGaugeD2.value)&&a.push(parseInt(this.canTxGaugeD2.value)),0<=parseInt(this.canTxGaugeD3.value)&&a.push(parseInt(this.canTxGaugeD3.value)),0<=parseInt(this.canTxGaugeD4.value)&&a.push(parseInt(this.canTxGaugeD4.value)),0<=parseInt(this.canTxGaugeD5.value)&&a.push(parseInt(this.canTxGaugeD5.value)),0<=parseInt(this.canTxGaugeD6.value)&&a.push(parseInt(this.canTxGaugeD6.value)),0<=parseInt(this.canTxGaugeD7.value)&&a.push(parseInt(this.canTxGaugeD7.value)),new canMessage);return s.init(e,t,a),s}#addCanRxMessageFromGUI(){var e=this.canRxGaugeExtended.checked,t=parseInt(this.canRxGaugeId.value);return this.addToWhiteList(e,t)}}export{canId,canMessage};