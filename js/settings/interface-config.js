let interfaceConfig={};function updateConfig(){var e=JSON.parse(localStorage.getItem("filterBMSConnection")||mobileDevice()),a=JSON.parse(localStorage.getItem("wakeLockEnabled")||mobileDevice()),t=localStorage.getItem("lastColorMode")||"dark",o=localStorage.getItem("customColorForeground")||"rgb(255,255,255)",n=localStorage.getItem("customColorBackground")||"rgb(0,0,0)",r=localStorage.getItem("customColorAccent")||"rgb(0,193,220)",i=localStorage.getItem("customColorCaptureModeBackground")||"rgba(255,255,255, 0.6)",c=JSON.parse(localStorage.getItem("autoReadBMSConfigCalib")||!0),g=JSON.parse(localStorage.getItem("devTileActive")||!0),l=parseFloat(localStorage.getItem("averagingIntervalU")||"0.25"),m=parseFloat(localStorage.getItem("averagingIntervalI")||"0.3"),f=parseFloat(localStorage.getItem("averagingIntervalT")||"0.6"),s=parseFloat(localStorage.getItem("averagingIntervalCalib")||"0.5"),d=parseFloat(localStorage.getItem("tachoAveragingIntervalV")||"0.7"),v=parseFloat(localStorage.getItem("tachoAveragingIntervalT")||"5"),S=Math.max(l,m,f,s),T=Math.max(d,v),p=parseFloat(localStorage.getItem("maxValuesHoldOnTime")||"20"),u=parseFloat(localStorage.getItem("connectionStepTimeout")||"2.0"),C=JSON.parse(localStorage.getItem("showBMSExtTemp")||!0),h=JSON.parse(localStorage.getItem("showBMSIntTemp")||!0),I=JSON.parse(localStorage.getItem("showMotorTemp")||!0),M=JSON.parse(localStorage.getItem("showTachoExtTemp")||!0);interfaceConfig={filterBMSConnection:e,wakeLock:a,colorMode:t,customColorForeground:o,customColorBackground:n,customColorAccent:r,customColorCaptureModeBackground:i,autoReadBMSConfigCalib:c,devTileActive:g,averagingIntervalU:l,averagingIntervalI:m,averagingIntervalT:f,averagingIntervalCalib:s,maxAveragingInterval:S,tachoDataAveragingIntervalV:d,tachoDataAveragingIntervalT:v,maxTachoAveragingInterval:T,maxValueHoldOnTime:p,connectionStepTimeout:u,showBMSExtTemp:C,showBMSIntTemp:h,showMotorTemp:I,showTachoExtTemp:M}}function setInterfaceConfigValues(){adjustColorMode(interfaceConfig.colorMode),interfaceBMSAutoReadConfigCalib.checked=interfaceConfig.autoReadBMSConfigCalib,interfaceWakeLock.checked=interfaceConfig.wakeLock,interfaceAveragingTimeU.value=interfaceConfig.averagingIntervalU,interfaceAveragingTimeI.value=interfaceConfig.averagingIntervalI,interfaceAveragingTimeT.value=interfaceConfig.averagingIntervalT,interfaceAveragingTimeCalib.value=interfaceConfig.averagingIntervalCalib,interfaceAveragingTimeTachoV.value=interfaceConfig.tachoDataAveragingIntervalV,interfaceAveragingTimeTachoT.value=interfaceConfig.tachoDataAveragingIntervalT,interfaceMaxValuesHoldOnTime.value=interfaceConfig.maxValueHoldOnTime,interfaceConnectionStepTimeout.value=interfaceConfig.connectionStepTimeout,interfaceBMSFilterConnection.checked=interfaceConfig.filterBMSConnection,interfaceShowBMSExtTemp.checked=interfaceConfig.showBMSExtTemp,interfaceShowBMSIntTemp.checked=interfaceConfig.showBMSIntTemp,interfaceShowMotorTemp.checked=interfaceConfig.showMotorTemp,interfaceShowTachoExtTemp.checked=interfaceConfig.showTachoExtTemp,updateTempGauges()}updateConfig(),setTimeout(()=>{updateConfig(),setInterfaceConfigValues(),interfaceConfig.wakeLock&&enableWakeLock()},100),interfaceBMSFilterConnection.addEventListener("change",()=>{localStorage.setItem("filterBMSConnection",interfaceBMSFilterConnection.checked),updateConfig()}),interfaceWakeLock.addEventListener("change",()=>{localStorage.setItem("wakeLockEnabled",interfaceWakeLock.checked),updateConfig(),(interfaceConfig.wakeLock?enableWakeLock:disableWakeLock)()}),interfaceBMSAutoReadConfigCalib.addEventListener("change",()=>{localStorage.setItem("autoReadBMSConfigCalib",interfaceBMSAutoReadConfigCalib.checked),updateConfig()}),interfaceAveragingTimeU.addEventListener("change",()=>{localStorage.setItem("averagingIntervalU",String(parseFloat(interfaceAveragingTimeU.value))),updateConfig()}),interfaceAveragingTimeI.addEventListener("change",()=>{localStorage.setItem("averagingIntervalI",String(parseFloat(interfaceAveragingTimeI.value))),updateConfig()}),interfaceAveragingTimeT.addEventListener("change",()=>{localStorage.setItem("averagingIntervalT",String(parseFloat(interfaceAveragingTimeT.value))),updateConfig()}),interfaceAveragingTimeCalib.addEventListener("change",()=>{localStorage.setItem("averagingIntervalCalib",String(parseFloat(interfaceAveragingTimeCalib.value))),updateConfig()}),interfaceAveragingTimeTachoV.addEventListener("change",()=>{localStorage.setItem("tachoAveragingIntervalV",String(parseFloat(interfaceAveragingTimeTachoV.value))),updateConfig()}),interfaceAveragingTimeTachoT.addEventListener("change",()=>{localStorage.setItem("tachoAveragingIntervalT",String(parseFloat(interfaceAveragingTimeTachoT.value))),updateConfig()}),interfaceMaxValuesHoldOnTime.addEventListener("change",()=>{localStorage.setItem("maxValuesHoldOnTime",String(parseFloat(interfaceMaxValuesHoldOnTime.value))),updateConfig()}),interfaceConnectionStepTimeout.addEventListener("change",()=>{localStorage.setItem("connectionStepTimeout",String(parseFloat(interfaceConnectionStepTimeout.value))),updateConfig()}),interfaceShowBMSExtTemp.addEventListener("change",()=>{localStorage.setItem("showBMSExtTemp",interfaceShowBMSExtTemp.checked),updateConfig(),updateTempGauges()}),interfaceShowBMSIntTemp.addEventListener("change",()=>{localStorage.setItem("showBMSIntTemp",interfaceShowBMSIntTemp.checked),updateConfig(),updateTempGauges()}),interfaceShowMotorTemp.addEventListener("change",()=>{localStorage.setItem("showMotorTemp",interfaceShowMotorTemp.checked),updateConfig(),updateTempGauges()}),interfaceShowTachoExtTemp.addEventListener("change",()=>{localStorage.setItem("showTachoExtTemp",interfaceShowTachoExtTemp.checked),updateConfig(),updateTempGauges()}),Coloris({theme:"polaroid"}),Coloris({el:".coloris",swatches:["#264653","#2a9d8f","#e9c46a","#f4a261","#e76f51","#d62828","#023e8a","#0077b6","#0096c7","#00b4d8","#48cae4"]}),Coloris.setInstance(".foreground-color",{theme:"polaroid"}),Coloris.setInstance(".background-color",{theme:"polaroid"}),Coloris.setInstance(".accent-color",{theme:"polaroid"}),Coloris.setInstance(".capture-mode-background-color",{theme:"polaroid"});