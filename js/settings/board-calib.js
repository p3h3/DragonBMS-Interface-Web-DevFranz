class bmsCalib{inVolt1Correction;inVolt2Correction;inVolt3Correction;outVoltCorrection;shunt1;shunt2;shunt3;constructor(){this.initialised=!1,getId("calculateInV1").addEventListener("click",()=>{inVolt1Correction.value=(bmsCalibObj.inVolt1Correction*(parseFloat(inVolt1Actual.innerText)/parseFloat(inVolt1Target.value))).toFixed(0)}),getId("calculateInV2").addEventListener("click",()=>{inVolt2Correction.value=(bmsCalibObj.inVolt2Correction*(parseFloat(inVolt2Actual.innerText)/parseFloat(inVolt2Target.value))).toFixed(0)}),getId("calculateInV3").addEventListener("click",()=>{inVolt3Correction.value=(bmsCalibObj.inVolt3Correction*(parseFloat(inVolt3Actual.innerText)/parseFloat(inVolt3Target.value))).toFixed(0)}),getId("calculateOut").addEventListener("click",()=>{outVoltCorrection.value=(bmsCalibObj.outVoltCorrection*(parseFloat(outVoltActual.innerText)/parseFloat(outVoltTarget.value))).toFixed(0)}),getId("calculateShunt1").addEventListener("click",()=>{shunt1.value=(bmsCalibObj.shunt1*(parseFloat(shunt1Actual.innerText)/parseFloat(shunt1Target.value))).toFixed(0)}),getId("calculateShunt2").addEventListener("click",()=>{shunt2.value=(bmsCalibObj.shunt2*(parseFloat(shunt2Actual.innerText)/parseFloat(shunt2Target.value))).toFixed(0)}),getId("calculateShunt3").addEventListener("click",()=>{shunt3.value=(bmsCalibObj.shunt3*(parseFloat(shunt3Actual.innerText)/parseFloat(shunt3Target.value))).toFixed(0)})}isStandardCalib(){return 6e3===this.inVolt1Correction&&6e3===this.inVolt2Correction&&6e3===this.inVolt3Correction&&500===this.shunt1&&500===this.shunt2&&500===this.shunt3}indicateSuccess(t){boardCalibTable.classList.add("success"),setTimeout(()=>{boardCalibTable.classList.remove("success")},t)}indicateWarning(t){boardCalibTable.classList.add("warning"),setTimeout(()=>{boardCalibTable.classList.remove("warning")},t)}indicateFailure(){boardCalibTable.classList.add("fault"),setTimeout(()=>{boardCalibTable.classList.remove("fault")},2e3)}readInCalibObject(t){this.inVolt1Correction=t.inVolt1Correction,this.inVolt2Correction=t.inVolt2Correction,this.inVolt3Correction=t.inVolt3Correction,this.outVoltCorrection=t.outVoltCorrection,this.shunt1=t.shunt1,this.shunt2=t.shunt2,this.shunt3=t.shunt3}getCalibObject(){var t={};return t.inVolt1Correction=this.inVolt1Correction,t.inVolt2Correction=this.inVolt2Correction,t.inVolt3Correction=this.inVolt3Correction,t.outVoltCorrection=this.outVoltCorrection,t.shunt1=this.shunt1,t.shunt2=this.shunt2,t.shunt3=this.shunt3,t}readInJSON(t){let i;try{i=JSON.parse(t)}catch(t){console.log("[bms calib] unable to read in JSON: "+t)}void 0!==i&&this.readInCalibObject(i)}getJSON(){if(this.initialised)return JSON.stringify(this.getCalibObject())}readInBuffer(t){var i=this.getBuffer();return this.inVolt1Correction=t.getUint8(1)<<8|t.getUint8(0),this.inVolt2Correction=t.getUint8(3)<<8|t.getUint8(2),this.inVolt3Correction=t.getUint8(5)<<8|t.getUint8(4),this.outVoltCorrection=t.getUint8(7)<<8|t.getUint8(6),this.shunt1=t.getUint8(9)<<8|t.getUint8(8),this.shunt2=t.getUint8(11)<<8|t.getUint8(10),this.shunt3=t.getUint8(13)<<8|t.getUint8(12),this.initialised=!0,!arraysEqual(i,this.getBuffer())}readInGUIValues(){this.inVolt1Correction=parseInt(inVolt1Correction.value),this.inVolt2Correction=parseInt(inVolt2Correction.value),this.inVolt3Correction=parseInt(inVolt3Correction.value),this.outVoltCorrection=parseInt(outVoltCorrection.value),this.shunt1=parseInt(shunt1.value),this.shunt2=parseInt(shunt2.value),this.shunt3=parseInt(shunt3.value)}setGUIValues(){inVolt1Correction.value=this.inVolt1Correction,inVolt2Correction.value=this.inVolt2Correction,inVolt3Correction.value=this.inVolt3Correction,outVoltCorrection.value=this.outVoltCorrection,shunt1.value=this.shunt1,shunt2.value=this.shunt2,shunt3.value=this.shunt3}getBuffer(){var t=[];return t[0]=to16bit(this.inVolt1Correction)[0],t[1]=to16bit(this.inVolt1Correction)[1],t[2]=to16bit(this.inVolt2Correction)[0],t[3]=to16bit(this.inVolt2Correction)[1],t[4]=to16bit(this.inVolt3Correction)[0],t[5]=to16bit(this.inVolt3Correction)[1],t[6]=to16bit(this.outVoltCorrection)[0],t[7]=to16bit(this.outVoltCorrection)[1],t[8]=to16bit(this.shunt1)[0],t[9]=to16bit(this.shunt1)[1],t[10]=to16bit(this.shunt2)[0],t[11]=to16bit(this.shunt2)[1],t[12]=to16bit(this.shunt3)[0],t[13]=to16bit(this.shunt3)[1],t}updateActualData(t){inVolt1Actual.innerHTML=t.u1,inVolt2Actual.innerHTML=t.u2,inVolt3Actual.innerHTML=t.u3,shunt1Actual.innerHTML=t.i1,shunt2Actual.innerHTML=t.i2,shunt3Actual.innerHTML=t.i3,outVoltActual.innerHTML=t.uOut}}function readBMSCalib(n){bmsObj.calibCharacteristic.readValue().then(t=>{var i=bmsCalibObj.initialised;bmsCalibObj.initialised&&bmsCalibObj.readInGUIValues();let e=bmsCalibObj.readInBuffer(t);i||(e=!0),bmsCalibObj.setGUIValues(),bmsCalibObj.isStandardCalib()?void 0!==(t=getLatestCalibForSerialNumber(bmsObj.serialNumber))&&(bmsCalibObj.readInCalibObject(t.calib),bmsCalibObj.setGUIValues(),writeBMSCalib()):addNewCalib(bmsCalibObj,bmsObj),fillInCalibBackupGUI(),n(!0,e)})}function writeBMSCalib(){bmsObj.calibCharacteristic.writeValue(Uint8Array.from(bmsCalibObj.getBuffer()).buffer).then(t=>{console.log("successfully wrote calib"),setTimeout(()=>{readBMSCalib(t=>{t?bmsCalibObj.indicateSuccess(3e3):bmsCalibObj.indicateFailure()})},200)}).catch(t=>{bmsCalibObj.indicateFailure()})}getId("board-calib-read").addEventListener("click",()=>{readBMSCalib((t,i)=>{t?i?bmsCalibObj.indicateSuccess(500):bmsCalibObj.indicateWarning(500):bmsCalibObj.indicateFailure()})}),getId("board-calib-write").addEventListener("click",()=>{bmsCalibObj.readInGUIValues(),writeBMSCalib()});