import gui from"../gui";import MCUManager from"./otaHelpers/mcumgr";import tilebar from"../tilebar";import sf from"../helpers/small_functions";export default class otaController extends gui{file=null;images=[];onUpdateSuccessfullCB;MGMT_GROUP_ID_IMAGE=1;IMG_MGMT_ID_STATE=0;constructor(t){super(),this.bleDevice=t,this.mcumgr=new MCUManager(t),this.mcumgr.onImageUploadProgress(({percentage:t})=>{this.otaUpdateInfoText.innerText="Uploading... "+t.toFixed(1)+"%"}),this.mcumgr.onMessage(({group:t,id:e,data:i})=>{t===this.MGMT_GROUP_ID_IMAGE?e===this.IMG_MGMT_ID_STATE&&(this.images=i.images):console.log("Unknown group")}),this.mcumgr.onImageUploadFinished(async()=>{this.otaUpdateInfoText.innerText="Upload complete",console.log("done uploading image");try{await this.mcumgr.cmdImageState()}catch(t){return void this.onUpdateFailureCB()}this.bleDevice.serviceInitDoneCB=()=>{setTimeout(async()=>{(new tilebar).scrollToBoardInfo(),this.otaUpdateInfoText.innerText="Initialising Update Service";try{await this.mcumgr.connect()}catch(t){return void this.onUpdateFailureCB()}try{await this.mcumgr.cmdImageState()}catch(t){return void this.onUpdateFailureCB()}let t=!0;if(setTimeout(()=>{t=!1},500),await sf.until(()=>!(t&&this.images[0].confirmed)),this.otaUpdateInfoText.innerText="Confirming Upload",0<this.images.length&&!1===this.images[0].confirmed)try{console.log("confirming image"),await this.mcumgr.cmdImageConfirm(this.images[0].hash),this.otaUpdateInfoText.innerText="Auto update COMPLETE!",this.onUpdateSuccessfullCB()}catch(t){return void this.onUpdateFailureCB()}else this.otaUpdateInfoText.innerText="Auto update failed!";this.bleDevice.serviceInitDoneCB=null},500)},setTimeout(async()=>{if(this.otaUpdateInfoText.innerText="Testing Image",1<this.images.length&&!1===this.images[1].pending)try{await this.mcumgr.cmdImageTest(this.images[1].hash)}catch(t){return void this.onUpdateFailureCB()}this.otaUpdateInfoText.innerText="Will reset shortly",setTimeout(async()=>{try{await this.mcumgr.cmdReset()}catch(t){this.onUpdateFailureCB()}},1500)},1500)})}updateSelectedFile(t,e){console.log(t);const i=new FileReader;i.onload=async()=>{this.fileData=i.result,e()},i.readAsArrayBuffer(t)}async startUpdateProcess(t,e){this.onUpdateSuccessfullCB=t,this.onUpdateFailureCB=e,this.otaUpdateInfoText.innerText="Initialising Update Service";try{await this.mcumgr.connect()}catch(t){return void this.onUpdateFailureCB()}setTimeout(async()=>{this.otaUpdateInfoText.innerText="Erasing";try{await this.mcumgr.cmdImageErase()}catch(t){return void this.onUpdateFailureCB()}setTimeout(()=>{this.otaUpdateInfoText.disabled=!0,this.fileData?this.mcumgr.cmdUpload(this.fileData).catch(()=>{this.onUpdateFailureCB()}):this.otaUpdateInfoText.innerText="No firmware loaded!"},1e3)},1e3)}}