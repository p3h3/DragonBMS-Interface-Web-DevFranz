import sf from"./helpers/small_functions";import gui_elements from"./gui_elements";import{zoom}from"./helpers/zoom";export default class captureModeManager extends gui_elements{video;constraints;constructor(){super(),this.video=sf.getId("capture-mode-video"),this.constraints={video:{height:{min:800},width:{min:600},facingMode:{exact:"environment"}}},window.addEventListener("scroll",()=>{sf.zoomedIn()&&sf.isScrolledIntoView(this.captureModeContainer)&&zoom.out()}),this.captureModeContainer.addEventListener("dblclick",()=>{"user"===this.constraints.video.facingMode.exact?this.constraints.video.facingMode.exact="environment":this.constraints.video.facingMode.exact="user",console.log(this.constraints);try{this.stopStream()}catch(t){console.log("probably no video started"),console.log(t)}this.startStream(this.constraints).then()})}activateCaptureMode(){this.captureModeContainer.classList.remove("display-none"),this.constraints.video.aspectRatio={exact:this.video.scrollHeight/this.video.scrollWidth},"mediaDevices"in navigator&&navigator.mediaDevices.getUserMedia&&this.startStream(this.constraints).then()}closeCaptureMode(){this.captureModeContainer.classList.add("display-none"),this.stopStream()}startStream=async t=>{t=await navigator.mediaDevices.getUserMedia(t);this.handleStream(t)};handleStream=t=>{this.video.srcObject=t};stopStream(){null!==this.video.srcObject&&void 0!==this.video.srcObject&&this.video.srcObject.getTracks().forEach(function(t){t.stop()})}}