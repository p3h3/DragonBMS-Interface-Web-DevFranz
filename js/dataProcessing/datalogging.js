import fileObject from"../helpers/fileaccess";import sf from"../helpers/small_functions";export default class dataLoggingManager{loggingFileObj;loggingDataBuffer;dataLoggingEnabled;constructor(){this.loggingFileObj=new loggingDataFileObject(this),this.dataLoggingEnabled=!1,this.loggingDataBuffer=[],this.saveDataLoggingData()}async newFile(){this.loggingFileObj=new loggingDataFileObject(this),await this.loggingFileObj.getHandle(),this.loggingDataBuffer=["psn;ms_today;stamp;u1;u2;u3;uOut;i1;i2;i3;tShunt;tPch;speed;rpm;motorTemp;externTemp;tripOdo;"]}closeFile(){this.dataLoggingEnabled=!1,this.loggingFileObj.closeObject(),this.loggingFileObj=null,this.loggingDataBuffer=[]}saveDataLoggingData(){(this.dataLoggingEnabled||0!==this.loggingDataBuffer.length)&&(this.loggingFileObj.saveLoggingData(this.loggingDataBuffer),this.loggingDataBuffer=[]),setTimeout(()=>{this.saveDataLoggingData()},1e3)}}class loggingDataFileObject extends fileObject{constructor(e){super("csv"),this.manager=e,this.suggestedFileName=this.getSuggestedFileName(),this.dataBuffer=[]}async getHandle(){await this.getSaveFileHandle(this.suggestedFileName)}saveLoggingData(e){if(this.dataBuffer=this.dataBuffer.concat(e),this.hasFileAccess()){if(void 0===this.writableStream)console.log("initialise object before writing to it");else if(20<this.dataBuffer.length||!this.manager.dataLoggingEnabled){this.dataBuffer.push("");try{this.writableStream.write(this.dataBuffer.join("\n"))}catch(e){}this.dataBuffer=[]}}else this.dataBuffer.length>1e7/115&&(this.dataBuffer.push(""),this.saveLegacy(this.suggestedFileName,this.dataBuffer),this.dataBuffer=[])}closeObject(){this.hasFileAccess()?void 0===this.writableStream?console.log("initialise object before closing it"):(this.saveLoggingData([]),this.writableStream.close()):this.saveLegacy(this.suggestedFileName,this.dataBuffer)}getSuggestedFileName(){let e="";void 0!==sf.getIdValue("board-config-device-name")&&(e=sf.getIdValue("board-config-device-name"));var t=new Date;return e+t.getFullYear().toString()+"_"+sf.pad2(t.getMonth()+1)+"_"+sf.pad2(t.getDate())+"__"+sf.pad2(t.getHours())+"_"+sf.pad2(t.getMinutes())+"_"+sf.pad2(t.getSeconds())}}