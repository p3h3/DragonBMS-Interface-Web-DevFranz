import gui from"../gui";import sf from"../helpers/small_functions";import bmsGatherer from"./bms_gathering";export default class bmsDataProcessor extends gui{bmsAveragingBuffer=[];maxValueBuffer=[];providedDataLabels=["bmsITotal","bmsPTotal","bmsPLoss"];usedEnergyOffset1=-1;usedEnergyOffset2=-1;usedEnergyOffset3=-1;remainingEnergy1=0;remainingEnergy2=0;remainingEnergy3=0;stateMachineState=4;constructor(e,t,a,i){super(),this.bmsConfigObj=e,this.bmsCalibObj=t,this.interfaceConfig=a,this.dataLoggingMgr=i,this.gatherer=new bmsGatherer(this.bmsConfigObj)}initDataDistribution(e){this.dd=e,this.dd.addProvidedDataLabels(this.providedDataLabels)}isInitialised(){return void 0!==this.bmsAveragingBuffer.at(0)}processData(o){o=this.gatherer.gatherData(o);if(void 0!==o){this.bmsAveragingBuffer.unshift(o),sf.deleteOlderDataPackets(this.bmsAveragingBuffer,this.interfaceConfig.maxAveragingInterval);var m=sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer,this.interfaceConfig.averagingIntervalU),1),d=sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer,this.interfaceConfig.averagingIntervalI),2),l=sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer,this.interfaceConfig.averagingIntervalT),1),b=sf.averagedData(sf.getLastXSeconds(this.bmsAveragingBuffer,this.interfaceConfig.averagingIntervalT),4),c=sf.averagedDataNumbers(sf.getLastXSeconds(this.bmsAveragingBuffer,this.interfaceConfig.averagingIntervalT)),p=(this.stateMachineState=o.stateMachineState,parseFloat(m.uOut)/1e3*(parseFloat(d.i1)+parseFloat(d.i2)+parseFloat(d.i3))),c=Math.abs(c.u1*c.i1+c.u2*c.i2+c.u3*c.i3-c.uOut*(c.i1+c.i2+c.i3));let e=parseFloat(d.i1)+parseFloat(d.i2)+parseFloat(d.i3);isNaN(e)&&(e=0),-1===this.usedEnergyOffset1&&(this.usedEnergyOffset1=o.eU1),-1===this.usedEnergyOffset2&&(this.usedEnergyOffset2=o.eU2),-1===this.usedEnergyOffset3&&(this.usedEnergyOffset3=o.eU3);var v=this.bmsConfigObj.battCellCount,E=this.bmsConfigObj.battNomCapacity;let t,a=(0===this.remainingEnergy1&&2.5*v<=o.u1<=4.2*v&&(O=o.u1/v,t=(O-3)/1.2,this.remainingEnergy1=t*(E/1e3)*(3.7*v)),0===this.remainingEnergy2&&2.5*v<=o.u2<=4.2*v&&(O=o.u2/v,t=(O-3)/1.2,this.remainingEnergy2=t*(E/1e3)*(3.7*v)),0===this.remainingEnergy3&&2.5*v<=o.u3<=4.2*v&&(O=o.u3/v,t=(O-3)/1.2,this.remainingEnergy3=t*(E/1e3)*(3.7*v)),(this.remainingEnergy1-(o.eU1-this.usedEnergyOffset1)/3600)/(E/1e3*v*3.7)*100),i=(this.remainingEnergy2-(o.eU2-this.usedEnergyOffset2)/3600)/(E/1e3*v*3.7)*100,s=(this.remainingEnergy3-(o.eU3-this.usedEnergyOffset3)/3600)/(E/1e3*v*3.7)*100,n=((o.u1<2.5*v||a<=0)&&(a=0,this.remainingEnergy1=0),(o.u2<2.5*v||i<=0)&&(i=0,this.remainingEnergy2=0),(o.u3<2.5*v||s<=0)&&(s=0,this.remainingEnergy3=0),100);1==(1&this.bmsConfigObj.boardEnabledChannels)&&a<n&&(n=a),2==(2&this.bmsConfigObj.boardEnabledChannels)&&i<n&&(n=i),4==(4&this.bmsConfigObj.boardEnabledChannels)&&s<n&&(n=s);var O=o.eU1+o.eU2+o.eU3,E={iTotal:e,pTotal:p,pLoss:c,energyUsed:{combined:O,ch1:o.eU1,ch2:o.eU2,ch3:o.eU3},soc:{ch1:a,ch2:i,ch3:s,min:n}},v=(this.dd.updateProvidedData({bmsITotal:e,bmsPTotal:p,bmsPLoss:c}),this.dd.executeMapping(),this.dd.updateDataExpecters(),{time:o.time,totalAmps:e,uOut:o.uOut,pTotal:p,tShunt:o.tShunt,tPch:o.tPch});this.maxValueBuffer.unshift(v),sf.deleteOlderDataPackets(this.maxValueBuffer,this.interfaceConfig.maxValueHoldOnTime);let r=[],g=[],h=[],f=[],u=[];this.maxValueBuffer.forEach(e=>{g.unshift(parseFloat(e.totalAmps).toFixed(1)),h.unshift(e.uOut),r.unshift(e.pTotal),u.unshift(e.tShunt),f.unshift(e.tPch)}),this.setBMSState(o.stateMachineState),this.handleTurnOnTd(o),this.handleConfigWarningButtons(o.stateMachineState),this.setChannelVoltageInfo(m),this.setChannelCurrentInfo(d),this.setBMSTempValues(l),this.setBMSMaxValues({power:Math.max(...r).toFixed(2),maxCurrent:Math.max(...g),minCurrent:Math.min(...g),minVoltage:Math.min(...h).toFixed(2),maxVoltage:Math.max(...h).toFixed(2),shuntTemp:Math.max(...u).toFixed(1),prechargeTemp:Math.max(...f).toFixed(1)}),this.setBMSCalculatedValues(E),this.bmsCalibObj.updateActualData(b),this.dataLoggingMgr.dataLoggingEnabled&&(O=sf.getTimeStamp(),c=sf.getMsToday(),p=[o.packageSequenceNumber,c,O,o.u1,o.u2,o.u3,o.uOut,o.i1,o.i2,o.i3,o.tShunt,o.tPch].join(";")+";;;;;",this.dataLoggingMgr.loggingDataBuffer.push(p))}}}